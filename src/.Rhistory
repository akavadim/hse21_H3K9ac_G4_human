###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_ChIP'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
NAME <- 'G4_ChIP'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 4000)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.pdf'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 4000)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.pdf'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
###
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
###
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19.filtered'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19.filtered'
#NAME <- 'G4_ChIP'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
source('lib.R')
###
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19.filtered'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19.filtered'
#NAME <- 'G4_ChIP'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
source('lib.R')
###
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19.filtered'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19.filtered'
NAME <- 'G4_ChIP'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
NAME <- 'G4_seq_Li_K.merge'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
source('lib.R')
###
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
#BiocManager::install("ChIPseeker")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
library(ChIPseeker)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
#library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(clusterProfiler)
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19.filtered'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19.filtered'
NAME <- 'G4_seq_Li_K.merge'
BED_FN <- paste0(DATA_DIR, NAME, '.bed')
###
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
peakAnno <- annotatePeak(BED_FN, tssRegion=c(-3000, 3000), TxDb=txdb, annoDb="org.Hs.eg.db")
png(paste0(OUT_DIR, 'chip_seeker.', NAME, '.plotAnnoPie.png'))
plotAnnoPie(peakAnno)
dev.off()
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.pdf'), path = OUT_DIR)
library(ChIPpeakAnno)
# https://bioconductor.org/packages/release/bioc/vignettes/ChIPpeakAnno/inst/doc/quickStart.html
BiocManager::install("ChIPpeakAnno")
peaks <- toGRanges(paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_G4.bed'), format="BED")
library(ChIPpeakAnno)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
peaks <- toGRanges(paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_G4.bed'), format="BED")
peaks[1:2]
annoData <- toGRanges(TxDb.Hsapiens.UCSC.hg19.knownGene)
annoData[1:2]
peaks <- toGRanges(paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_G4.bed'), format="BED")
View(peaks)
source('lib.R')
# https://bioconductor.org/packages/release/bioc/vignettes/ChIPpeakAnno/inst/doc/quickStart.html
BiocManager::install("ChIPpeakAnno")
library(ChIPpeakAnno)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
peaks <- toGRanges(paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_G4.bed'), format="BED")
peaks[1:2]
annoData <- toGRanges(TxDb.Hsapiens.UCSC.hg19.knownGene)
annoData[1:2]
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
data.frame(anno) %>% head()
anno$symbol <- xget(anno$feature, org.Hs.egSYMBOL)
data.frame(anno) %>% head()
anno_df <- data.frame(anno)
write.table(anno_df, file=paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_DeepZ.genes.txt'),
col.names = TRUE, row.names = FALSE, sep = '\t', quote = FALSE)
uniq_genes_df <- unique(anno_df['symbol'])
write.table(uniq_genes_df, file=paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_DeepZ.genes_uniq.txt'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.img'), path = OUT_DIR)
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
#NAME <- 'G4_seq_Li_K.merge'
NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
source('lib.R')
###
NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 4000)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.png'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
bed_df$len <- bed_df$end - bed_df$start
head(bed_df)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.init.hist.pdf'), path = OUT_DIR)
# Remove long peaks
bed_df <- bed_df %>%
arrange(-len) %>%
filter(len < 4000)
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('filter_peaks.', NAME, '.filtered.hist.png'), path = OUT_DIR)
bed_df %>%
select(-len) %>%
write.table(file=paste0(DATA_DIR, NAME ,'.filtered.bed'),
col.names = FALSE, row.names = FALSE, sep = '\t', quote = FALSE)
source('lib.R')
###
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg38'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg38'
#NAME <- 'H3K9ac_K562_ENCFF280OVN_hg19'
#NAME <- 'H3K9ac_K562_ENCFF568DJI_hg19'
NAME <- 'G4_seq_Li_K.merge'
#NAME <- 'H3K9ac_K562.intersect_with_G4'
###
bed_df <- read.delim(paste0(DATA_DIR, NAME, '.bed'), as.is = TRUE, header = FALSE)
#colnames(bed_df) <- c('chrom', 'start', 'end', 'name', 'score')
colnames(bed_df) <- c('chrom', 'start', 'end')
bed_df$len <- bed_df$end - bed_df$start
ggplot(bed_df) +
aes(x = len) +
geom_histogram() +
ggtitle(NAME, subtitle = sprintf('Number of peaks = %s', nrow(bed_df))) +
theme_bw()
ggsave(paste0('len_hist.', NAME, '.png'), path = OUT_DIR)
library(ChIPpeakAnno)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
peaks <- toGRanges(paste0(DATA_DIR, 'H3K9ac_K562.intersect_with_G4.bed'), format="BED")
peaks[1:2]
annoData <- toGRanges(TxDb.Hsapiens.UCSC.hg19.knownGene)
annoData[1:2]
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
data.frame(anno) %>% head()
anno$symbol <- xget(anno$feature, org.Hs.egSYMBOL)
data.frame(anno) %>% head()
uniq_genes_df <- unique(anno_df['symbol'])
